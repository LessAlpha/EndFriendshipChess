syntax = "proto3";
package = "game";

message CommonResp {
	string cmd = 1;
	int32 res = 2;
	string desc = 3;
	string psw = 4;
}

// 登陆
message LoginReq {
	string uId = 1;
	string nick = 2;
	string photo = 3;
	string psw = 4;
}
message LoginResp {
	int32 res = 1;
	
}
// 建房
message CreateRoomReq {
	int32 nSumUser = 1;
}
message CreateRoomResp {
	int32 res = 1;
	int32 nIdRoom = 2;
	int32 nSumUser = 4;
}

// 进房
message JoinRoomReq {
	int32 nIdRoom = 1;
}
message JoinRoomResp {
	int32 res = 1;
	int32 nIdRoom = 2;
	int32 nSumUser = 3;
	string uIdHost = 4;
	repeated UserJoin users = 5;
}

// 加入房间玩家信息结构体
message UserJoin {
	string uId = 1;
	string nick = 2;
	string photo = 3;
	int32 nPos = 4;
	int32 skin = 5;
}
// 1003 加入房间后给其他玩家的广播
message JoinRoomBroadcast {
	string uId = 1;
	string nick = 2;
	string photo = 3;
	int32 nPos = 4;
	int32 skin = 5;
}

// 4 退出房间
message ExitRoom {

}
// 退出房间的响应 - 通用响应：游戏已经开始
// 1004 退出房间的广播
message ExitRoomBroadcast {

}

// 5 解散房间 - 仅房主
message DeleteRoom {

}
// 解散房间的响应 - 通用响应：不是房主；
// 1005 解散房间的广播
message DeleteRoomBroadcast {

}

// 6 开始游戏-仅房主
message StartGameReq {
	string n = 1;// 无意义
}
// 开始游戏的响应 - 通用响应：不是房主；人数不够；
// 1006 开始游戏的广播
message StartGameBroadcast {
    string n = 1;// 无意义
}

// 101 服务端通知摇骰子和骰子结果的广播
message OperateLuckyNextResp {
	int32 nPos = 1;// 下一位操作玩家位置索引
	int32 nLucky = 3;// 摇出的点数
}

// 7 显示数字结果的请求
message OperateLuckyEndReq {
	int32 nPos = 1;
}
// 显示数字结果的响应 - 通用响应：不是该用户操作
// 1007 显示数字结果的广播
message OperateLuckyEndBroadcast {
	int32 res = 1;
}

// 8 选定移动飞机
message OperateFlyReq {
	int32 fInd = 1;// 选定飞机的索引
}
// 选定移动飞机的响应 - 通用响应：不是该用户操作
// 1008 选定移动飞机的广播 
message OperateFlyBroadcast {
	int32 nPos = 1;// 操作玩家位置索引
	int32 fInd = 2;// 走动棋子的索引
	int32 nStep = 3;// 前进点数 摇出的骰子个数
}

// 102 玩家掉线广播
message PlayerOfflineBroadcast {
	int32 nPos = 1;// 玩家位置
}

// 103 玩家重新上线广播
message PlayerReonlineBroadcast {

}




//  玩家游戏中掉线重连的响应
message PlayerReonlineResp {

}


//////////////////////////////////////////////////////////////////////////////////////////


message BroadcastRoomInfo {
	int32 operate = 1;// 1 玩家进入；2 玩家掉线；3 玩家重新上线；
	string uId = 2;
	string nick = 3;
	string photo = 4;
	int32 nPos = 5;
}
// broadcast gameplaying
message BroadcastOperateInfo {
	int32 operate = 1;// 1 ；2 ；3 
	string uId = 2;
	string nick = 3;
	string photo = 4;
	int32 nPos = 5;
}

// 示例
//message example{
//	string cityId = 1;
//	LoginResp info = 2;
//	bool bo = 3;
//	repeated string buildingId = 4;
//	optional int32 soldierType = 5;
//}
